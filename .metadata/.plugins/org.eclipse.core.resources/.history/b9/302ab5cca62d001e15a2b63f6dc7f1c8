/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

// RCC   0x40023800
// Offset RCC = 0x30
// Mask = 0x00000010

// GPIOA = 0x40020000
// MODER = 0x00
// ODR   = 0x14

#include <stdint.h>

#define RCC_BASE 	 0x40023800
#define RCC_OFFSET   0x30

#define GPIOA_BASE   0x40020000
#define MODER_OFFSET 0x00
#define ODR_OFFSET	 0x14

int main(void)
{
  uint32_t *p_ClockEnableGPIOA   = (uint32_t *)(RCC_BASE + RCC_OFFSET);
  uint32_t *p_RegisterModerGPIOA = (uint32_t *)(GPIOA_BASE + MODER_OFFSET);
  uint32_t *p_RegisterOdrGPIOA   = (uint32_t *)(GPIOA_BASE + ODR_OFFSET);

  *p_ClockEnableGPIOA   |= 0x00000001;                                    // Enable clock GPIO port A
  *p_RegisterModerGPIOA &= 0xFFFFFFF0;                                    // Ensure values start in 0
  *p_RegisterModerGPIOA |= 0x00000001;                                    // Set General purpose output mode
  *p_RegisterOdrGPIOA   |= 0x00000020;

    /* Loop forever */
	while (1){

	}
}
